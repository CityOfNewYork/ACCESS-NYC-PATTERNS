/**
 * Layouts
 */

// Dependencies
@import 'config/variables';
@import 'config/layouts';
@import 'config/dimensions';
@import 'config/direction';
@import 'config/media';
@import 'scss/functions/strip-units';

$breakpoints: map-get($variables, 'screens');

// Mixins
// Do not include any layouts in here that require custom responsive breakpoints
@mixin layouts($variant: '') {
  .#{$variant}page-wrapper,
  .#{$variant}wrap {
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    max-width: $site-max-width;
    min-height: 100%;
    min-width: $site-min-width;
  }

  //
  // General layout for two equal columns, no gutters, tablet up screens.
  //
  //  .------------------.
  //  |.-------..-------.|
  //  ||       ||       ||
  //  ||       ||       ||
  //  ||       ||       ||
  //  |.-------..-------.|
  //  .------------------.
  //
  .#{$variant}layout--columns {
    display: flex;
    flex-wrap: wrap;
    > * {
      width: 50%;
    }
  }

  //
  // General layout for two equal rows, no gutters, tablet up screens.
  //
  //  .------------------.
  //  |.----------------.|
  //  ||                ||
  //  |.----------------.|
  //  ||                ||
  //  |.----------------.|
  //  .------------------.
  //
  .#{$variant}layout--rows {
    display: flex;
    flex-wrap: wrap;
    > * {
      height: 50%;
      width: 100%;
    }
  }

  //
  // General layout for single column with horizontal gutters (margin bottom)
  // on nested elements (the rows), except for the last row. Mobile up.
  //
  //  .-------------------.
  //  |.-----------------.|
  //  ||                 ||
  //  |.-----------------.|
  //  |                   |
  //  |.-----------------.|
  //  ||                 ||
  //  |.-----------------.|
  //  |                   |
  //  |.-----------------.|
  //  ||                 ||
  //  |.-----------------.|
  //  .-------------------.
  //
  .#{$variant}layout--gutter {
    > * {
      width: 100%;
      margin-bottom: $spacing-base;
    }

    > *:last-child {
      margin-bottom: 0;
    }
  }

  //
  // General layout for two equal columns with gutter down the middle and
  // horizontal gutter between rows. No gutter beneath the last row. Stacks
  // elements on top of each other for screens smaller than desktop.
  //
  //  .-------------------.
  //  |.------.  .-------.|
  //  ||      |  |       ||
  //  |.------.  .-------.|
  //  |                   |
  //  |.------.  .-------.|
  //  ||      |  |       ||
  //  |.------.  .-------.|
  //  |                   |
  //  |.------.  .-------.|
  //  ||      |  |       ||
  //  |.------.  .-------.|
  //  .-------------------.
  //
  .#{$variant}layout--columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > * {
      margin-bottom: $spacing-base;
      width: calc(50% - #{$spacing-base/2});
    }

    > *:nth-last-child(1),
    > *:nth-last-child(2) {
      margin-bottom: 0;
    }
  }

  //
  // A layout for four column grid with gutter
  //
  //  .-------------------.
  //  |.--. .--. .--. .--.|
  //  ||  | |  | |  | |  ||
  //  |.--. .--. .--. .--.|
  //  |                   |
  //  |.--. .--. .--. .--.|
  //  ||  | |  | |  | |  ||
  //  |.--. .--. .--. .--.|
  //  |                   |
  //  |.--. .--. .--. .--.|
  //  ||  | |  | |  | |  ||
  //  |.--. .--. .--. .--.|
  //  .-------------------.
  //
  .#{$variant}layout--four-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *, &:after {
      width: calc(25% - #{$spacing-base / 2});
    }

    > * {
      margin-bottom: $spacing-base / 2;
    }

    &:after {
      content: '';
      margin-bottom: 0;
    }
  }

  //
  // A layout for three column grid with gutter
  //
  //  .--------------.
  //  |.--. .--. .--.|
  //  ||  | |  | |  ||
  //  |.--. .--. .--.|
  //  |              |
  //  |.--. .--. .--.|
  //  ||  | |  | |  ||
  //  |.--. .--. .--.|
  //  |              |
  //  |.--. .--. .--.|
  //  ||  | |  | |  ||
  //  |.--. .--. .--.|
  //  .--------- ----.
  //
  .#{$variant}layout--three-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *, &:after {
      width: calc(33.33% - #{$spacing-base / 2});
    }

    > * {
      margin-bottom: $spacing-base / 2;
    }

    &:after {
      content: '';
      margin-bottom: 0;
    }
  }

  //
  // A layout for two column grid with gutter
  //
  //  .---------.
  //  |.--. .--.|
  //  ||  | |  ||
  //  |.--. .--.|
  //  |         |
  //  |.--. .--.|
  //  ||  | |  ||
  //  |.--. .--.|
  //  |         |
  //  |.--. .--.|
  //  ||  | |  ||
  //  |.--. .--.|
  //  .---------.
  //
  .#{$variant}layout--two-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *, &:after {
      width: calc(50% - #{$spacing-base / 2});
    }

    > * {
      margin-bottom: $spacing-base / 2;
    }

    &:after {
      content: '';
      margin-bottom: 0;
    }
  }

  //
  // Layout for single sidebar with 16rem width. No gutters. Stacks sidebar on
  // top for screens smaller than desktop width.
  //
  //  .-------------------.
  //  |.----..-----------.|
  //  ||    ||           ||
  //  ||    ||           ||
  //  ||    ||           ||
  //  |.----..-----------.|
  //  .-------------------.
  //
  .#{$variant}layout--sidebar {
    display: flex;
    align-items: stretch;

    > *:first-child {
      width: 18.5rem
    }

    > *:first-child + * {
      width: calc(100% - 18.5rem)
    }
  }

  //
  // Layout for single sidebar with 16rem width. No gutters. Stacks sidebar on
  // top for screens smaller than desktop width.
  //
  //  .-------------------.
  //  |.----..-----------.|
  //  ||    ||           ||
  //  ||    ||           ||
  //  ||    ||           ||
  //  |.----..-----------.|
  //  .-------------------.
  //
  .#{$variant}layout--sidebar-small {
    display: flex;
    align-items: stretch;

    > *:first-child {
      width: 12.5rem
    }

    > *:first-child + * {
      width: calc(100% - 12.5rem)
    }
  }

  //
  // Layout for smaller single sidebar with 12rem width. No gutters. Stacks
  // sidebar on top for screens smaller than desktop width.
  //
  //  .-------------------.
  //  |.--. .------------.|
  //  ||  | |            ||
  //  ||  | |            ||
  //  ||  | |            ||
  //  |.--. .------------.|
  //  .-------------------.
  //
  .#{$variant}layout--sidebar-gutter {
    display: flex;
    align-items: stretch;

    > * {
      margin-bottom: 0
    }

    > *:first-child {
      width: 18.5rem;
      margin-#{$text-direction-end}: $spacing-base;
    }

    > *:first-child + * {
      width: calc(100% - 18.5rem - #{$spacing-base})
    }
  }

  //
  // Layout for smaller single sidebar with 12rem width. No gutters. Stacks
  // sidebar on top for screens smaller than desktop width.
  //
  //  .-------------------.
  //  |.--. .------------.|
  //  ||  | |            ||
  //  ||  | |            ||
  //  ||  | |            ||
  //  |.--. .------------.|
  //  .-------------------.
  //
  .#{$variant}layout--sidebar-small-gutter {
    display: flex;
    align-items: stretch;

    > * {
      margin-bottom: 0
    }

    > *:first-child {
      width: 12.5rem;
      margin-#{$text-direction-end}: $spacing-base;
    }

    > *:first-child + * {
      width: calc(100% - 12.5rem - #{$spacing-base})
    }
  }

  //
  // Layout for the home body which is a smaller centered column.
  //
  //  .------------------.
  //  |    .--------.    |
  //  |    |        |    |
  //  |    |        |    |
  //  |    |        |    |
  //  |    |        |    |
  //  |    .--------.    |
  //  .------------------.
  //
  .#{$variant}layout--home-body {
    > *:first-child {
      margin: (1.5 * $spacing-base) auto;
      max-width: $homepage-max-width + ($spacing-base * 2);
    }
  }

  //
  // Fixed topbar layout for tablets or other mobile devices (Field Screener).
  // The main content overflow scrolls while the topbar remains at the top of
  // the page. For print, the main content overflow is fully visible.
  //
  //  .------------------.
  //  |.----------------.|
  //  ||                ||
  //  |.----------------.|
  //  |.----------------.|
  //  ||                ||
  //  ||                ||
  //  ||                ||
  //  ||                ||
  //  |.----------------.|
  //  .------------------.
  //
  .#{$variant}layout--topbar {
    > *:first-child {
      height: 90px;
    }
  }

  .#{$variant}layout--topbar {
    > *:first-child + * {
      position: relative;
      height: calc(100vh - 90px);
      overflow: hidden;
    }
  }

  .#{$variant}layout--topbar {
    > *:first-child + * > *:first-child {
      width: 100%;
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      overflow: scroll;
      -webkit-overflow-scrolling: touch;
    }
  }

  .#{$variant}layout--topbar {
    > *:first-child + * > *:first-child:after {
      content: '';
      height: 100%;
      display: block;
    }
  }
} // END Responsive Layouts

.usa-grid {
  // @include padding(null $site-margins-mobile);
  padding-left: ($spacing-base / 3) * 2;
  padding-right: ($spacing-base / 3) * 2;
  margin-left: auto;
  margin-right: auto;

  @media screen and (min-width: $screen-tablet) {
    padding-left: $spacing-base;
    padding-right: $spacing-base;
  }
}

//
// Layout for the map
//
//  .------------------.
//  |.----------------.|
//  ||                ||
//  |.----------------.|
//  ||                ||
//  ||                ||
//  ||                ||
//  |.----------------.|
//  .------------------.
//
.layout--map {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column-reverse;

  @media screen and (min-width: $screen-desktop) {
    height: 90vh;
    flex-direction: row;
  }

  .layout--map__sidebar {
    width: 100%;

    @media screen and (min-width: $screen-desktop) {
      height: 90vh;
      overflow: hidden;
      overflow-y: auto;
    }
  }

  .layout--map__map {
    height: 50vh;
    width: 100%;

    @media screen and (min-width: $screen-desktop) {
      height: 100%;
    }
  }
}

@mixin layout-print {
  .page-wrapper {
    display: block
  }

  .layout--topbar {
    > *:first-child + * {
      position: static;
      height: auto;
    }
  }

  .layout--topbar {
    > *:first-child + * > *:first-child {
      position: static
    }
  }
}

// Declarations

// the layout execution
@include layouts;

// the layout breakpoint execution
@each $breakpoint, $b in $breakpoints {
  @media screen and (min-width: #{$b}px) {
    $variant: $breakpoint + '\\:';
    @include layouts($variant);
  }
}

.print-view {
  @include layout-print
}

@media print {
  @include layout-print
}
